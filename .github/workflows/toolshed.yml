name: ghcr.io/opencyphal/toolshed container build and publish.

on:
  release:
    types: [ published ]

  pull_request:
    branches: [ "main" ]

env:
  ORG_NAMESPACE: opencyphal
  IMAGE_NAME: toolshed
  IMAGE_VERSION_PREFIX: ts

jobs:

  dry_run:
    if: ${{ github.event_name == 'pull_request' || ( github.event_name == 'release' && startsWith( github.ref, 'ts') && github.event.release.prerelease ) }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - # Add QEMU to allow building non-native containers as
      # part of multi-platform container builds.
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - # Setup buildx so we can do multi-platform container builds.
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: build
      run: cd ${{ env.IMAGE_NAME}} && docker buildx build --platform linux/arm64,linux/amd64 .

  release:
    if: ${{ github.event_name == 'release' && startsWith( github.ref, 'ts' ) && !github.event.release.prerelease }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - # Add QEMU to allow building non-native containers as
      # part of multi-platform container builds.
      name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - # Setup buildx so we can do multi-platform container builds.
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: build-and-push
      run: cd ${{ env.IMAGE_NAME }} && docker buildx build --platform linux/arm64,linux/amd64 --push -t ghcr.io/${{ env.ORG_NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION_PREFIX }}${{ github.ref }} .
